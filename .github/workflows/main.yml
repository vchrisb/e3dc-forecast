name: build

on:
  push:
    branches: 'master'
    tags: '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/tags/v}
          else
            echo ::set-output name=version::snapshot
          fi
          echo ::set-output name=build_date::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
          install: true
      -
        name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        # https://github.com/actions/checkout
        name: Checkout
        uses: actions/checkout@v2
        
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          registry: ghcr.io
          tags: vchrisb/e3dc-forecast/e3dc-forecast:latest
          push: true
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
      -
        name: Docker Login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login --username "${{ steps.prepare.outputs.docker_username }}" --password-stdin
      -
        name: Docker Buildx
        run: |
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=true" \
            --build-arg "BUILD_DATE=${{ steps.prepare.outputs.build_date }}" \
            --build-arg "VCS_REF=${GITHUB_SHA::8}" \
            --build-arg "VERSION=${{ steps.prepare.outputs.version }}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}" \
            --file Dockerfile .
      -
        name: Docker Buildx (latest tag)
        if: success() && startsWith(github.ref, 'refs/tags/')
        run: |
          docker buildx build --platform ${{ steps.prepare.outputs.docker_platforms }} \
            --output "type=image,push=true" \
            --build-arg "BUILD_DATE=${{ steps.prepare.outputs.build_date }}" \
            --build-arg "VCS_REF=${GITHUB_SHA::8}" \
            --build-arg "VERSION=${{ steps.prepare.outputs.version }}" \
            --tag "${{ steps.prepare.outputs.docker_image }}:latest" \
            --file Dockerfile .
      -
        name: Docker Check Manifest
        run: |
          docker run --rm mplatform/mquery ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }}
      -
        name: Clear
        run: |
          rm -f ${HOME}/.docker/config.json
